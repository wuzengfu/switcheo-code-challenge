syntax = "proto3";

package resource.resource;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "resource/resource/params.proto";
import "resource/resource/resource.proto";

option go_package = "resource/x/resource/types";

// Query defines the gRPC querier service.
service Query {

  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/resource/resource/params";

  }

  // Queries a list of ShowResource items.
  rpc ShowResource (QueryShowResourceRequest) returns (QueryShowResourceResponse) {
    option (google.api.http).get = "/resource/resource/show_resource/{id}";

  }

  // Queries a list of ListResource items.
  rpc ListResource (QueryListResourceRequest) returns (QueryListResourceResponse) {
    option (google.api.http).get = "/resource/resource/list_resource";

  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {

  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryShowResourceRequest {
  uint64 id = 1;
}

message QueryShowResourceResponse {
  Resource resource = 1;
}

message QueryListResourceRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListResourceResponse {
  repeated Resource                               resource = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

